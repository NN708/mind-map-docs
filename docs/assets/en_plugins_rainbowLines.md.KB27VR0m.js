import{_ as s,c as i,o as a,a4 as n}from"./chunks/framework.B358x4hV.js";const u=JSON.parse('{"title":"RainbowLines plugin","description":"","frontmatter":{},"headers":[],"relativePath":"en/plugins/rainbowLines.md","filePath":"en/plugins/rainbowLines.md"}'),e={name:"en/plugins/rainbowLines.md"},t=n(`<h1 id="rainbowlines-plugin" tabindex="-1">RainbowLines plugin <a class="header-anchor" href="#rainbowlines-plugin" aria-label="Permalink to &quot;RainbowLines plugin&quot;">​</a></h1><blockquote><p>v0.9.9+</p></blockquote><p>This plugin is used to implement rainbow lines.</p><p>Enabling rainbow lines and custom colors can be set through the instantiation option &#39;rainbowLinesConfig&#39;.</p><p>The default color list is as follows:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>[</span></span>
<span class="line"><span>  &#39;rgb(255, 213, 73)&#39;,</span></span>
<span class="line"><span>  &#39;rgb(255, 136, 126)&#39;,</span></span>
<span class="line"><span>  &#39;rgb(107, 225, 141)&#39;,</span></span>
<span class="line"><span>  &#39;rgb(151, 171, 255)&#39;,</span></span>
<span class="line"><span>  &#39;rgb(129, 220, 242)&#39;,</span></span>
<span class="line"><span>  &#39;rgb(255, 163, 125)&#39;,</span></span>
<span class="line"><span>  &#39;rgb(152, 132, 234)&#39;</span></span>
<span class="line"><span>]</span></span></code></pre></div><p>Please refer to the <a href="./../api/constructor/constructor-options.html#_12-rainbowlines-plugin">Instantiation Options</a> for configuration.</p><h2 id="register" tabindex="-1">Register <a class="header-anchor" href="#register" aria-label="Permalink to &quot;Register&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MindMap </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;simple-mind-map&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> RainbowLines </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;simple-mind-map/src/plugins/RainbowLines.js&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MindMap.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">usePlugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(RainbowLines)</span></span></code></pre></div><p>After registration and instantiation of <code>MindMap</code>, the instance can be obtained through <code>mindMap.rainbowLines</code>.</p><h2 id="method" tabindex="-1">Method <a class="header-anchor" href="#method" aria-label="Permalink to &quot;Method&quot;">​</a></h2><h3 id="updaterainlinesconfig-config" tabindex="-1">updateRainLinesConfig(config = {}) <a class="header-anchor" href="#updaterainlinesconfig-config" aria-label="Permalink to &quot;updateRainLinesConfig(config = {})&quot;">​</a></h3><p>If you want to modify the rainbow lines after setting them through the instantiation option &#39;rainbowLinesConfig&#39;, you can use this method, option <code>config</code> is same with <code>rainbowLinesConfig</code>。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    open</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Is turn on rainbow lines</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    colorsList</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: []</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Customize the color list for rainbow lines. If not set, the default color list will be used</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="getcolorslist" tabindex="-1">getColorsList() <a class="header-anchor" href="#getcolorslist" aria-label="Permalink to &quot;getColorsList()&quot;">​</a></h3><p>Get a list of currently used rainbow line colors.</p><h3 id="getnodecolor-node" tabindex="-1">getNodeColor(node) <a class="header-anchor" href="#getnodecolor-node" aria-label="Permalink to &quot;getNodeColor(node)&quot;">​</a></h3><p>Retrieve the rainbow line color corresponding to the specified node instance.</p><h3 id="getsecondlayerancestor-node" tabindex="-1">getSecondLayerAncestor(node) <a class="header-anchor" href="#getsecondlayerancestor-node" aria-label="Permalink to &quot;getSecondLayerAncestor(node)&quot;">​</a></h3><p>Retrieve the second level ancestor node instance of a node instance.</p>`,20),o=[t];function l(p,r,h,d,c,g){return a(),i("div",null,o)}const b=s(e,[["render",l]]);export{u as __pageData,b as default};
