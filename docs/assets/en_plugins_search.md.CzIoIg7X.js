import{_ as e,o as a,c as t,a5 as s}from"./chunks/framework.D1Ej91Qw.js";const u=JSON.parse('{"title":"Search plugin","description":"","frontmatter":{},"headers":[],"relativePath":"en/plugins/search.md","filePath":"en/plugins/search.md"}'),i={name:"en/plugins/search.md"},n=s(`<h1 id="search-plugin" tabindex="-1">Search plugin <a class="header-anchor" href="#search-plugin" aria-label="Permalink to &quot;Search plugin&quot;">​</a></h1><blockquote><p>v0.6.9+</p></blockquote><p>This plugin provides the ability to search and replace node content.</p><p>Please refer to the <a href="./../api/constructor/constructor-options.html#_10-search-plugin">Instantiation Options</a> for configuration.</p><h2 id="register" tabindex="-1">Register <a class="header-anchor" href="#register" aria-label="Permalink to &quot;Register&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MindMap </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;simple-mind-map&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Search </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;simple-mind-map/src/plugins/Search.js&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MindMap.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">usePlugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Search)</span></span></code></pre></div><p>After registration and instantiation of <code>MindMap</code>, the instance can be obtained through <code>mindMap.search</code>.</p><h2 id="event" tabindex="-1">Event <a class="header-anchor" href="#event" aria-label="Permalink to &quot;Event&quot;">​</a></h2><h3 id="search-info-change" tabindex="-1">search_info_change <a class="header-anchor" href="#search-info-change" aria-label="Permalink to &quot;search_info_change&quot;">​</a></h3><p>You can listen to &#39;search_info_change&#39; event to get the number of current search results and the index currently located.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mindMap.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;search_info_change&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /*</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        data: {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            currentIndex,// Index, from zero</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            total</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h2 id="method" tabindex="-1">Method <a class="header-anchor" href="#method" aria-label="Permalink to &quot;Method&quot;">​</a></h2><h3 id="search-searchtext-callback" tabindex="-1">search(searchText, callback) <a class="header-anchor" href="#search-searchtext-callback" aria-label="Permalink to &quot;search(searchText, callback)&quot;">​</a></h3><ul><li><p><code>searchText</code>: Text to search for</p></li><li><p><code>callback</code>: The callback function that completes this search will be triggered after jumping to the node</p></li></ul><p>Search for node content, which can be called repeatedly. Each call will search and locate to the next matching node. If the search text changes, it will be searched again.</p><h3 id="endsearch" tabindex="-1">endSearch() <a class="header-anchor" href="#endsearch" aria-label="Permalink to &quot;endSearch()&quot;">​</a></h3><p>End search.</p><h3 id="replace-replacetext-jumpnext-false" tabindex="-1">replace(replaceText, jumpNext = false) <a class="header-anchor" href="#replace-replacetext-jumpnext-false" aria-label="Permalink to &quot;replace(replaceText, jumpNext = false)&quot;">​</a></h3><ul><li><p><code>replaceText</code>: Text to be replaced</p></li><li><p><code>jumpNext</code>: v0.6.12+, Whether to automatically jump to the next matching node</p></li></ul><p>To replace the content of the current node, call the &#39;search&#39; method after calling it to replace the content of the currently located matching node.</p><h3 id="replaceall-replacetext" tabindex="-1">replaceAll(replaceText) <a class="header-anchor" href="#replaceall-replacetext" aria-label="Permalink to &quot;replaceAll(replaceText)&quot;">​</a></h3><ul><li><code>replaceText</code>: Text to be replaced</li></ul><p>Replace all matching node contents, and call it after calling the &#39;search&#39; method.</p><h3 id="getreplacedtext-node-searchtext-replacetext" tabindex="-1">getReplacedText(node, searchText, replaceText) <a class="header-anchor" href="#getreplacedtext-node-searchtext-replacetext" aria-label="Permalink to &quot;getReplacedText(node, searchText, replaceText)&quot;">​</a></h3><ul><li><p><code>node</code>: Node instance</p></li><li><p><code>searchText</code>: Text to search for</p></li><li><p><code>replaceText</code>: Text to be replaced</p></li></ul><p>Return the text content of the node after search and replacement. Note that the node content will not be actually changed, but is only used to calculate the content of a node after replacement.</p>`,26),l=[n];function h(c,r,p,o,d,k){return a(),t("div",{"data-pagefind-body":!0},l)}const x=e(i,[["render",h]]);export{u as __pageData,x as default};
