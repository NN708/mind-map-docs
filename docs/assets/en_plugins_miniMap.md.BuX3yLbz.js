import{_ as e,o as i,c as s,a5 as a}from"./chunks/framework.D1Ej91Qw.js";const u=JSON.parse('{"title":"MiniMap plugin","description":"","frontmatter":{},"headers":[],"relativePath":"en/plugins/miniMap.md","filePath":"en/plugins/miniMap.md"}'),n={name:"en/plugins/miniMap.md"},t=a(`<h1 id="minimap-plugin" tabindex="-1">MiniMap plugin <a class="header-anchor" href="#minimap-plugin" aria-label="Permalink to &quot;MiniMap plugin&quot;">​</a></h1><blockquote><p>v0.2.11+</p></blockquote><p>Used to help quickly develop a small map feature, the small map consists of two parts, one is the current canvas content, and the other is the viewport frame. When zoomed, moved, or there are too many elements, the canvas may only display part of the mind map content. The viewport frame can be used to view the current viewport location, and can be quickly positioned by dragging on the small map.</p><h2 id="register" tabindex="-1">Register <a class="header-anchor" href="#register" aria-label="Permalink to &quot;Register&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MindMap </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;simple-mind-map&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MiniMap </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;simple-mind-map/src/plugins/MiniMap.js&#39;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// import MiniMap from &#39;simple-mind-map/src/MiniMap.js&#39; Use this path for versions below v0.6.0</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MindMap.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">usePlugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(MiniMap)</span></span></code></pre></div><p>After registration and instantiation of <code>MindMap</code>, the instance can be obtained through <code>mindMap.miniMap</code>.</p><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><h3 id="calculationminimap-boxwidth-boxheight" tabindex="-1">calculationMiniMap(boxWidth, boxHeight) <a class="header-anchor" href="#calculationminimap-boxwidth-boxheight" aria-label="Permalink to &quot;calculationMiniMap(boxWidth, boxHeight)&quot;">​</a></h3><p>&quot;Calculate the rendering data for the small map, this function will call the <code>getMiniMap()</code> method, so using this function is sufficient.</p><p><code>boxWidth</code>: the width of the small map container</p><p><code>boxHeight</code>: the height of the small map container</p><p>Function return content:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      getImgUrl,</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// v0.8.0+, An asynchronous function that you can call and pass a callback function. The callback function can receive a parameter representing a small map of the image type, and you can render it through the img tag</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      svgHTML, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Mini map HTML, it is recommended to use the getImgUrl method to obtain image type mini maps, reduce the number of page DOM, and optimize performance</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      viewBoxStyle, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// view box position information</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      miniMapBoxScale, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// view box zoom value</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      miniMapBoxLeft, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// view box left value</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      miniMapBoxTop, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// view box top value</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Small map idea:</p><p>1.Prepare a container element <code>container</code>, position is not <code>static</code></p><p>If using rich text editing mode, it is best to remove the default style from the elements inside the &#39;container&#39;, otherwise there may be text offset issues within nodes:</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.container</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  margin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  padding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>2.In <code>container</code>, create a small map container element <code>miniMapContainer</code>, absolute positioning</p><p>3.In <code>container</code>, create a view box element <code>viewBoxContainer</code>, absolute positioning, set border style, transition property (optional)</p><p>4.Listen for <code>data_change</code> and <code>view_data_change</code> events, and in this event call the <code>calculationMiniMap</code> method to get calculation data, then render <code>svgHTML</code> to the <code>miniMapContainer</code> element and set <code>miniMapContainer</code> element style:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:style</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    transform</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`scale(\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">miniMapBoxScale</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">})\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    left</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: miniMapBoxLeft </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;px&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    top</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: miniMapBoxTop </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;px&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span></code></pre></div><p>5.Set the <code>viewBoxStyle</code> object as the style of the <code>viewBoxContainer</code> element</p><p>At this point, when the mind map on the canvas changes, the small map will also be updated in real time, and the view box element will reflect the position of the viewport on the mind map graph in real time</p><p>6.Listen for the <code>mousedown</code>, <code>mousemove</code>events of the <code>container</code> element, And listen for the &#39;mouseup&#39; event of the &#39;window&#39; (if &#39;mouseup&#39; is bound to the &#39;container&#39; element, the entire dragging behavior of the &#39;container&#39; element cannot be stopped when the mouse is moved out), and call the three methods that will be introduced below to achieve the effect of the mind map on the canvas being dragged with the mouse</p><p>7.In v0.10.2+version, it supports dragging and dropping viewport boxes within the mini map to achieve synchronized dragging of the canvas, Implementing this feature can listen to the &#39;mousedown&#39; of the &#39;viewBoxContainer&#39; element（Need to prevent bubbles, otherwise it will trigger the &#39;mousedown&#39; event of the &#39;container&#39; element）、<code>mousemove</code> event, Call the &#39;onViewBoxMousedown&#39; and &#39;onViewBoxMousemove&#39; methods of the mini map plugin instance separately, At the same time, it is necessary to listen for the &#39;mini_map_view_box_position_change&#39; event to update the viewBoxContainer element in real-time</p><p>For detailed tutorials, please refer to<a href="./../../course/course14.html">How to render a mini map</a>。</p><h3 id="onmousedown-e" tabindex="-1">onMousedown(e) <a class="header-anchor" href="#onmousedown-e" aria-label="Permalink to &quot;onMousedown(e)&quot;">​</a></h3><p>Small map mouse down event executes this function.</p><p><code>e</code>: event object</p><h3 id="onmousemove-e-sensitivitynum-5" tabindex="-1">onMousemove(e, sensitivityNum = 5) <a class="header-anchor" href="#onmousemove-e-sensitivitynum-5" aria-label="Permalink to &quot;onMousemove(e, sensitivityNum = 5)&quot;">​</a></h3><p>This function is executed on the small map mouse move event.</p><p><code>e</code>: event object</p><p><code>sensitivityNum</code>: drag sensitivity, the higher the sensitivity, the greater the actual canvas dragging distance on the small map when dragging the same distance on the small map.</p><h3 id="onmouseup" tabindex="-1">onMouseup() <a class="header-anchor" href="#onmouseup" aria-label="Permalink to &quot;onMouseup()&quot;">​</a></h3><p>This function is executed on the small map mouse release event.</p><h3 id="onviewboxmousedown-e" tabindex="-1">onViewBoxMousedown(e) <a class="header-anchor" href="#onviewboxmousedown-e" aria-label="Permalink to &quot;onViewBoxMousedown(e)&quot;">​</a></h3><blockquote><p>v0.10.2+</p></blockquote><p>Call this method for the viewport box element mouse down event.</p><h3 id="onviewboxmousemove-e" tabindex="-1">onViewBoxMousemove(e) <a class="header-anchor" href="#onviewboxmousemove-e" aria-label="Permalink to &quot;onViewBoxMousemove(e)&quot;">​</a></h3><blockquote><p>v0.10.2+</p></blockquote><p>Call this method for the mouse movement event of the viewport box element.</p>`,41),o=[t];function h(p,l,d,r,c,m){return i(),s("div",{"data-pagefind-body":!0},o)}const g=e(n,[["render",h]]);export{u as __pageData,g as default};
