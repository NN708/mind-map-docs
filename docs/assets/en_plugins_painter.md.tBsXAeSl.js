import{_ as e,o as a,c as t,a5 as i}from"./chunks/framework.D1Ej91Qw.js";const g=JSON.parse('{"title":"Painter plugin","description":"","frontmatter":{},"headers":[],"relativePath":"en/plugins/painter.md","filePath":"en/plugins/painter.md"}'),n={name:"en/plugins/painter.md"},s=i(`<h1 id="painter-plugin" tabindex="-1">Painter plugin <a class="header-anchor" href="#painter-plugin" aria-label="Permalink to &quot;Painter plugin&quot;">​</a></h1><blockquote><p>v0.6.12+</p></blockquote><p>Node format brush plugin.</p><h2 id="register" tabindex="-1">Register <a class="header-anchor" href="#register" aria-label="Permalink to &quot;Register&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MindMap </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;simple-mind-map&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Painter </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;simple-mind-map/src/plugins/Painter.js&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MindMap.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">usePlugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Painter)</span></span></code></pre></div><p>After registration and instantiation of <code>MindMap</code>, the instance can be obtained through <code>mindMap.painter</code>.</p><h2 id="event" tabindex="-1">Event <a class="header-anchor" href="#event" aria-label="Permalink to &quot;Event&quot;">​</a></h2><blockquote><p>You can use mindMap.on(&#39;event name&#39;, () =&gt; {}) method to listen events.</p></blockquote><h3 id="painter-start" tabindex="-1">painter_start <a class="header-anchor" href="#painter-start" aria-label="Permalink to &quot;painter_start&quot;">​</a></h3><p>The event of painter start.</p><h3 id="painter-end" tabindex="-1">painter_end <a class="header-anchor" href="#painter-end" aria-label="Permalink to &quot;painter_end&quot;">​</a></h3><p>The event of painter end.</p><h2 id="method" tabindex="-1">Method <a class="header-anchor" href="#method" aria-label="Permalink to &quot;Method&quot;">​</a></h2><h3 id="startpainter" tabindex="-1">startPainter() <a class="header-anchor" href="#startpainter" aria-label="Permalink to &quot;startPainter()&quot;">​</a></h3><p>Start painter.</p><p>After calling this method, if there is currently an active node, the first active node will be taken as the specified node by default. After clicking on other nodes, the style of that node will be applied to the other nodes being clicked. When clicking on the canvas, the format brushing operation ends.</p>`,16),r=[s];function p(o,h,l,d,c,k){return a(),t("div",{"data-pagefind-body":!0},r)}const m=e(n,[["render",p]]);export{g as __pageData,m as default};
