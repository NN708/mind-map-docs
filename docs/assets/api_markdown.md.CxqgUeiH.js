import{_ as a,c as s,o as t,a4 as i}from"./chunks/framework.B358x4hV.js";const u=JSON.parse('{"title":"Markdown解析","description":"","frontmatter":{},"headers":[],"relativePath":"api/markdown.md","filePath":"api/markdown.md"}'),e={name:"api/markdown.md"},o=i('<h1 id="markdown解析" tabindex="-1">Markdown解析 <a class="header-anchor" href="#markdown解析" aria-label="Permalink to &quot;Markdown解析&quot;">​</a></h1><blockquote><p>v0.4.7+</p></blockquote><p>提供导入和导出<code>Markdown</code>文件的方法。</p><h2 id="引入" tabindex="-1">引入 <a class="header-anchor" href="#引入" aria-label="Permalink to &quot;引入&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> markdown </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;simple-mind-map/src/parse/markdown.js&#39;</span></span></code></pre></div><p>如果使用的是<code>umd</code>格式的文件，那么可以通过如下方式获取：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> src</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;simple-mind-map/dist/simpleMindMap.umd.min.js&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">simpleMindMap.markdown</span></span></code></pre></div><h2 id="方法" tabindex="-1">方法 <a class="header-anchor" href="#方法" aria-label="Permalink to &quot;方法&quot;">​</a></h2><h3 id="transformtomarkdown-data" tabindex="-1">transformToMarkdown(data) <a class="header-anchor" href="#transformtomarkdown-data" aria-label="Permalink to &quot;transformToMarkdown(data)&quot;">​</a></h3><ul><li><code>data</code>：思维导图数据，可以通过<code>mindMap.getData()</code>方法获取。</li></ul><p>将思维导图数据转换成<code>Markdown</code>格式数据，返回的是字符串。</p><h3 id="transformmarkdownto-mdcontent" tabindex="-1">transformMarkdownTo(mdContent) <a class="header-anchor" href="#transformmarkdownto-mdcontent" aria-label="Permalink to &quot;transformMarkdownTo(mdContent)&quot;">​</a></h3><ul><li><code>mdContent</code>：要转换的<code>Markdown</code>数据，字符串类型。</li></ul><p>将<code>Markdown</code>字符串转换成节点树数据，返回一个<code>Promise</code>实例。可以使用<code>mindMap.setData()</code>方法将转换后的数据渲染到画布上。</p>',15),n=[o];function d(r,l,p,h,c,k){return t(),s("div",null,n)}const g=a(e,[["render",d]]);export{u as __pageData,g as default};
