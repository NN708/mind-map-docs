import{_ as a,o as e,c as t,a5 as c}from"./chunks/framework.D1Ej91Qw.js";const m=JSON.parse('{"title":"BatchExecution实例","description":"","frontmatter":{},"headers":[],"relativePath":"api/batchExecution.md","filePath":"api/batchExecution.md"}'),o={name:"api/batchExecution.md"},n=c('<h1 id="batchexecution实例" tabindex="-1">BatchExecution实例 <a class="header-anchor" href="#batchexecution实例" aria-label="Permalink to &quot;BatchExecution实例&quot;">​</a></h1><p><code>batchExecution</code>用来批量异步的执行一些操作，如果某个操作同时多次调用，那么只会在下一个事件循环里执行一次。可以通过<code>mindMap.batchExecution</code>获取到该实例</p><h2 id="方法" tabindex="-1">方法 <a class="header-anchor" href="#方法" aria-label="Permalink to &quot;方法&quot;">​</a></h2><h3 id="push-name-fn" tabindex="-1">push(name, fn) <a class="header-anchor" href="#push-name-fn" aria-label="Permalink to &quot;push(name, fn)&quot;">​</a></h3><p>添加任务。</p><p><code>name</code>：任务名称</p><p><code>fn</code>：任务</p>',7),i=[n];function h(r,d,s,p,_,u){return e(),t("div",{"data-pagefind-body":!0},i)}const f=a(o,[["render",h]]);export{m as __pageData,f as default};
