import{_ as s,c as a,o as i,a4 as l}from"./chunks/framework.B358x4hV.js";const g=JSON.parse('{"title":"Scrollbar 插件","description":"","frontmatter":{},"headers":[],"relativePath":"plugins/scrollbar.md","filePath":"plugins/scrollbar.md"}'),n={name:"plugins/scrollbar.md"},e=l(`<h1 id="scrollbar-插件" tabindex="-1">Scrollbar 插件 <a class="header-anchor" href="#scrollbar-插件" aria-label="Permalink to &quot;Scrollbar 插件&quot;">​</a></h1><blockquote><p>v0.7.0+</p><p>v0.7.1+进行了重构，下面的文档为新文档。</p></blockquote><p>该插件用于帮助开发水平和垂直滚动条的功能。详细使用方式请参考教程。</p><p>配置请参考<a href="./../api/constructor/constructor-options.html#_9-scrollbar插件">实例化选项</a>。</p><h2 id="注册" tabindex="-1">注册 <a class="header-anchor" href="#注册" aria-label="Permalink to &quot;注册&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MindMap </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;simple-mind-map&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Scrollbar </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;simple-mind-map/src/plugins/Scrollbar.js&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MindMap.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">usePlugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Scrollbar)</span></span></code></pre></div><p>注册完且实例化<code>MindMap</code>后可通过<code>mindMap.scrollbar</code>获取到该实例。</p><h2 id="事件" tabindex="-1">事件 <a class="header-anchor" href="#事件" aria-label="Permalink to &quot;事件&quot;">​</a></h2><h4 id="scrollbar-change-data" tabindex="-1">scrollbar_change(data) <a class="header-anchor" href="#scrollbar-change-data" aria-label="Permalink to &quot;scrollbar_change(data)&quot;">​</a></h4><ul><li><code>data</code>：滚动条数据，格式如下：</li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 垂直滚动条</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    vertical</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        top,</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 垂直滚动条的top值，百分比数值</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        height</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 垂直滚动条的高度，百分比数值</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 水平滚动条</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    horizontal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        left,</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 水平滚动条的left值，百分比数值</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        width</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 水平滚动条的宽度，百分比数值</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>当滚动条数据发生改变时触发，你可以监听该事件来更新滚动条位置和大小。接收一个参数，代表当前最新的滚动条位置和大小信息，你可以使用它来更新滚动条元素的样式。</p><h2 id="方法" tabindex="-1">方法 <a class="header-anchor" href="#方法" aria-label="Permalink to &quot;方法&quot;">​</a></h2><h3 id="setscrollbarwrapsize-width-height" tabindex="-1">setScrollBarWrapSize(width, height) <a class="header-anchor" href="#setscrollbarwrapsize-width-height" aria-label="Permalink to &quot;setScrollBarWrapSize(width, height)&quot;">​</a></h3><ul><li><p><code>width</code>：Number，你的滚动条容器元素的宽度。</p></li><li><p><code>height</code>： Number，你的滚动条容器元素的高度。</p></li></ul><p>设置滚动条容器的大小，对于水平滚动条，即容器的宽度，对于垂直滚动条，即容器的高度。当你的滚动条容器尺寸改变时需要再次调用该方法。</p><h3 id="calculationscrollbar" tabindex="-1">calculationScrollbar() <a class="header-anchor" href="#calculationscrollbar" aria-label="Permalink to &quot;calculationScrollbar()&quot;">​</a></h3><blockquote><p>通常你不需要调用该方法，如果初次渲染滚动条时滚动条没有更新，那么可以手动调用该方法获取滚动条数据。</p><p>需要先调用setScrollBarWrapSize方法设置滚动条容器元素的宽高。</p></blockquote><p>返回值：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 垂直滚动条</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    vertical</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        top,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        height</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 水平滚动条</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    horizontal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        left,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        width</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>获取滚动条大小和位置。</p><h3 id="onmousedown-e-type" tabindex="-1">onMousedown(e, type) <a class="header-anchor" href="#onmousedown-e-type" aria-label="Permalink to &quot;onMousedown(e, type)&quot;">​</a></h3><ul><li><p><code>e</code>：鼠标按下事件的事件对象。</p></li><li><p><code>type</code>：按下的滚动条类型，vertical（垂直滚动条）、horizontal（水平滚动条）。</p></li></ul><p>滚动条元素的鼠标按下事件时需要调用该方法。</p><h3 id="onclick-e-type" tabindex="-1">onClick(e, type) <a class="header-anchor" href="#onclick-e-type" aria-label="Permalink to &quot;onClick(e, type)&quot;">​</a></h3><ul><li><p><code>e</code>：鼠标点击事件的事件对象。</p></li><li><p><code>type</code>：鼠标点击的滚动条类型，vertical（垂直滚动条）、horizontal（水平滚动条）。</p></li></ul><p>滚动条元素的的点击事件时需要调用该方法。</p>`,27),t=[e];function p(h,r,o,c,k,d){return i(),a("div",null,t)}const u=s(n,[["render",p]]);export{g as __pageData,u as default};
