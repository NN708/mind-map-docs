import{_ as s,o as i,c as a,a5 as e}from"./chunks/framework.D1Ej91Qw.js";const F=JSON.parse('{"title":"Cooperate 插件 beta","description":"","frontmatter":{},"headers":[],"relativePath":"plugins/cooperate.md","filePath":"plugins/cooperate.md"}'),n={name:"plugins/cooperate.md"},t=e(`<h1 id="cooperate-插件-beta" tabindex="-1">Cooperate 插件 beta <a class="header-anchor" href="#cooperate-插件-beta" aria-label="Permalink to &quot;Cooperate 插件 beta&quot;">​</a></h1><blockquote><p>v0.7.3+</p></blockquote><p>该插件用于实现协同编辑。</p><p>配置请参考<a href="./../api/constructor/constructor-options.html#_11-cooperate插件">实例化选项</a>。</p><h2 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h2><p>该插件通过<a href="https://github.com/yjs/yjs" target="_blank" rel="noreferrer">Yjs</a>实现协同编辑，基本原理是将思维导图的树数据转成平级的对象数据，然后通过<a href="https://docs.yjs.dev/api/shared-types/y.map" target="_blank" rel="noreferrer">Y.Map</a>类型的共享数据进行协同，即当画布上进行了某些操作后会更新<code>y.map</code>对象，然后其他协同的客户端会接收到更新后的数据，再转换回树结构数据，更新画布即可实现实时更新。</p><p>要实现协同，后端是少不了的，<code>Yjs</code>提供了一些<a href="https://docs.yjs.dev/ecosystem/connection-provider" target="_blank" rel="noreferrer">Connection Provider</a>。同时也提供了后端的示例，但只是最简单的实现，实际项目中你应该需要重写或完善。</p><p>你可以选择适合自己的<code>Provider</code>，默认使用的是<a href="https://github.com/yjs/y-webrtc" target="_blank" rel="noreferrer">y-webrtc</a>。</p><h2 id="demo" tabindex="-1">demo <a class="header-anchor" href="#demo" aria-label="Permalink to &quot;demo&quot;">​</a></h2><p>如果你想通过demo来尝试一下可以通过以下步骤：</p><ol><li>克隆项目及安装依赖：</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/wanglin2/mind-map.git</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mind-map</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> simple-mind-map</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> i</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> link</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ..</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> web</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> i</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> link</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> simple-mind-map</span></span></code></pre></div><ol start="2"><li>修改<code>web/src/pages/Edit/components/Edit.vue</code>文件</li></ol><p>注册协同插件，即取消该行注释：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// .usePlugin(Cooperate)// 协同插件</span></span></code></pre></div><p>将信令服务器地址改为你本机的ip：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// cooperateTest 函数</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">signalingList</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ws://【你的ip】:4444&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div><ol start="3"><li>启动demo项目的本地服务：</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">//</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> web路径下执行</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> serve</span></span></code></pre></div><ol start="4"><li>启动信令服务器：</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">//</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> simple-mind-map路径下执行</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> wsServe</span></span></code></pre></div><p>该命令执行的是<code>simple-mind-map/bin/wsServer.mjs</code>文件，该文件的内容是从<a href="https://github.com/yjs/y-webrtc" target="_blank" rel="noreferrer">y-webrtc</a>仓库直接复制的，可能并不完善，请谨慎用于实际项目。</p><ol start="5"><li>在两个浏览器中访问服务地址：</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>http://【你的ip】:8080/#/?userName=用户名</span></span></code></pre></div><p>你可以在不同的浏览器上设置不同的userName。然后就可以在一个浏览器中编辑，在另一个浏览器上看到自动更新了。</p><h2 id="注册" tabindex="-1">注册 <a class="header-anchor" href="#注册" aria-label="Permalink to &quot;注册&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MindMap </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;simple-mind-map&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Cooperate </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;simple-mind-map/src/plugins/Cooperate.js&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MindMap.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">usePlugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Cooperate)</span></span></code></pre></div><p>注册完且实例化<code>MindMap</code>后可通过<code>mindMap.cooperate</code>获取到该实例。</p><h3 id="配置" tabindex="-1">配置 <a class="header-anchor" href="#配置" aria-label="Permalink to &quot;配置&quot;">​</a></h3><p>该插件支持一些配置，可在实例化思维导图时传入，支持的配置如下：</p><p><code>beforeCooperateUpdate</code></p><p>详细信息见【构造函数】篇章的【实例化选项】小节。</p><h2 id="方法" tabindex="-1">方法 <a class="header-anchor" href="#方法" aria-label="Permalink to &quot;方法&quot;">​</a></h2><h3 id="getdoc" tabindex="-1">getDoc() <a class="header-anchor" href="#getdoc" aria-label="Permalink to &quot;getDoc()&quot;">​</a></h3><p>获取Yjs doc实例。</p><h3 id="setprovider-provider-webrtcproviderconfig" tabindex="-1">setProvider(provider, webrtcProviderConfig) <a class="header-anchor" href="#setprovider-provider-webrtcproviderconfig" aria-label="Permalink to &quot;setProvider(provider, webrtcProviderConfig)&quot;">​</a></h3><ul><li><p><code>provider</code>：Yjs的连接提供者，可参考<a href="https://docs.yjs.dev/ecosystem/connection-provider" target="_blank" rel="noreferrer">Connection Provider</a>，默认为<code>null</code></p></li><li><p><code>webrtcProviderConfig</code>：webrtc provider的配置参数，需要传递一个对象，格式如下：</p></li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{ </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    roomName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 必传，房间名称 </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    signalingList</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 必传，指定信令服务器</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ...</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// webrtc provider的其他配置</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>详细配置可参考<a href="https://github.com/yjs/y-webrtc" target="_blank" rel="noreferrer">y-webrtc</a>。</p><p>设置Yjs的连接提供者，<code>provider</code>如果不传，那么默认会使用<code>y-webrtc</code>，你也可以使用其他的<code>provider</code>。</p><p>如果使用默认的<code>y-webrtc</code>，那么需要通过第二个参数传入必要的配置。</p><p><code>simple-mind-map/bin/wsServer.mjs</code>文件提供了一个简单的信令服务器代码，可供测试和参考。</p><h3 id="setuserinfo-userinfo" tabindex="-1">setUserInfo(userInfo) <a class="header-anchor" href="#setuserinfo-userinfo" aria-label="Permalink to &quot;setUserInfo(userInfo)&quot;">​</a></h3><ul><li><code>userInfo</code>：用户信息。格式如下：</li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,     </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 必传，用户唯一的id</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 用户名称。name和avatar两个只传一个即可，如果都传了，会显示avatar</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   avatar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 用户头像</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&#39;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   // 如果没有传头像，那么会以一个圆形来显示名称的第一个字，文字的颜色为白色，圆的颜色可以通过该字段设置</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>设置当前用户的信息，用于感知数据的同步和显示。即如果其他协同人员激活了某个节点时，会在你当前画布中的该节点上方显示他的头像。</p>`,46),p=[t];function l(h,r,o,d,k,c){return i(),a("div",{"data-pagefind-body":!0},p)}const y=s(n,[["render",l]]);export{F as __pageData,y as default};
