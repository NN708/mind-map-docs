import{_ as a,c as s,o as i,a4 as e}from"./chunks/framework.B358x4hV.js";const g=JSON.parse('{"title":"OuterFrame 插件","description":"","frontmatter":{},"headers":[],"relativePath":"plugins/outerFrame.md","filePath":"plugins/outerFrame.md"}'),t={name:"plugins/outerFrame.md"},n=e(`<h1 id="outerframe-插件" tabindex="-1">OuterFrame 插件 <a class="header-anchor" href="#outerframe-插件" aria-label="Permalink to &quot;OuterFrame 插件&quot;">​</a></h1><blockquote><p>v0.10.2+</p></blockquote><p>该插件用于实现外框功能。</p><h2 id="注册" tabindex="-1">注册 <a class="header-anchor" href="#注册" aria-label="Permalink to &quot;注册&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MindMap </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;simple-mind-map&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> OuterFrame </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;simple-mind-map/src/plugins/OuterFrame.js&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MindMap.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">usePlugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(OuterFrame)</span></span></code></pre></div><p>注册完且实例化<code>MindMap</code>后可通过<code>mindMap.outerFrame</code>获取到该实例。</p><p>应用使用可参考Demo该部分的代码：<a href="https://github.com/wanglin2/mind-map/blob/main/web/src/pages/Edit/components/NodeOuterFrame.vue" target="_blank" rel="noreferrer">NodeOuterFrame.vue</a>。</p><h2 id="命令" tabindex="-1">命令 <a class="header-anchor" href="#命令" aria-label="Permalink to &quot;命令&quot;">​</a></h2><p>该插件会向思维导图注册<code>ADD_OUTER_FRAME</code>命令，用于给节点添加外框：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mindMap.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">execCommand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ADD_OUTER_FRAME&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, appointNodes, config </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {})</span></span></code></pre></div><ul><li><p><code>appointNodes</code>：指定要添加外框的节点实例节点，可以是单个节点实例，也可以是节点实例数组，如果传递<code>[]</code>或<code>null</code>，则会向画布当前激活的节点添加外框</p></li><li><p><code>config</code>：外框配置，对象格式，字段如下：</p></li></ul><table tabindex="0"><thead><tr><th>字段名称</th><th>类型</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>radius</td><td>Number</td><td>5</td><td>外框圆角大小</td></tr><tr><td>strokeWidth</td><td>Number</td><td>2</td><td>外框边框宽度</td></tr><tr><td>strokeColor</td><td>String</td><td>#0984e3</td><td>外框边框颜色</td></tr><tr><td>strokeDasharray</td><td>String</td><td>5,5</td><td>外框边框虚线</td></tr><tr><td>fill</td><td>String</td><td>rgba(9,132,227,0.05)</td><td>外框填充颜色</td></tr></tbody></table><h2 id="事件" tabindex="-1">事件 <a class="header-anchor" href="#事件" aria-label="Permalink to &quot;事件&quot;">​</a></h2><h3 id="outer-frame-active" tabindex="-1">outer_frame_active <a class="header-anchor" href="#outer-frame-active" aria-label="Permalink to &quot;outer_frame_active&quot;">​</a></h3><p>当点击激活某个外框时触发。回调函数接收三个参数：el（外框元素，@svgdotjs/svg.js库的rect元素）, node（该范围所属节点的父节点实例）, range（范围区间，相对于node）</p><p>应用可以监听该事件来获取当前激活的外框，获取到其配置回显到页面，因为范围可能包含多个节点，所以通常取第一个节点实例，如果要获取外框在页面上的位置，可以调用<code>el.rbox</code>方法：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mindMap.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;outer_frame_active&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">el</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">parentNode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">range</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 取范围内第一个节点的外框样式</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> firstNode</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> parentNode.children[range[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> firstNodeOuterFrame</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> firstNode.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getData</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;outerFrame&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 获取外框的位置大小信息，你可以在该位置渲染你的配置浮层</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">x</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">y</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> el.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rbox</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h3 id="outer-frame-delete" tabindex="-1">outer_frame_delete <a class="header-anchor" href="#outer-frame-delete" aria-label="Permalink to &quot;outer_frame_delete&quot;">​</a></h3><p>删除画布当前激活的外框时触发。</p><h2 id="方法" tabindex="-1">方法 <a class="header-anchor" href="#方法" aria-label="Permalink to &quot;方法&quot;">​</a></h2><h3 id="getactiveouterframe" tabindex="-1">getActiveOuterFrame() <a class="header-anchor" href="#getactiveouterframe" aria-label="Permalink to &quot;getActiveOuterFrame()&quot;">​</a></h3><p>获取当前激活的外框数据。返回一个对象，结构如下：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    el,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    node,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    range</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="updateactiveouterframe-config" tabindex="-1">updateActiveOuterFrame(config = {}) <a class="header-anchor" href="#updateactiveouterframe-config" aria-label="Permalink to &quot;updateActiveOuterFrame(config = {})&quot;">​</a></h3><p>更新当前激活的外框。执行了该方法后请立即隐藏你的样式面板，因为会清除当前激活的外框。</p><h3 id="removeactiveouterframe" tabindex="-1">removeActiveOuterFrame() <a class="header-anchor" href="#removeactiveouterframe" aria-label="Permalink to &quot;removeActiveOuterFrame()&quot;">​</a></h3><p>删除当前激活的外框。</p><h3 id="getrangenodelist-node-range" tabindex="-1">getRangeNodeList(node, range) <a class="header-anchor" href="#getrangenodelist-node-range" aria-label="Permalink to &quot;getRangeNodeList(node, range)&quot;">​</a></h3><p>获取某个节点指定范围的带外框的子节点列表。</p><h3 id="clearactiveouterframe" tabindex="-1">clearActiveOuterFrame() <a class="header-anchor" href="#clearactiveouterframe" aria-label="Permalink to &quot;clearActiveOuterFrame()&quot;">​</a></h3><p>清除当前激活的外框。</p>`,31),h=[n];function r(l,p,d,k,o,c){return i(),s("div",null,h)}const u=a(t,[["render",r]]);export{g as __pageData,u as default};
