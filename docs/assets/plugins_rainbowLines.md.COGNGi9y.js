import{_ as s,o as a,c as i,a5 as n}from"./chunks/framework.D1Ej91Qw.js";const b=JSON.parse('{"title":"RainbowLines插件","description":"","frontmatter":{},"headers":[],"relativePath":"plugins/rainbowLines.md","filePath":"plugins/rainbowLines.md"}'),e={name:"plugins/rainbowLines.md"},t=n(`<h1 id="rainbowlines插件" tabindex="-1">RainbowLines插件 <a class="header-anchor" href="#rainbowlines插件" aria-label="Permalink to &quot;RainbowLines插件&quot;">​</a></h1><blockquote><p>v0.9.9+</p></blockquote><p>该插件用于实现彩虹线条。</p><p>开启彩虹线条及自定义颜色可以通过实例化选项<code>rainbowLinesConfig</code>设置。</p><p>默认的颜色列表如下：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>[</span></span>
<span class="line"><span>  &#39;rgb(255, 213, 73)&#39;,</span></span>
<span class="line"><span>  &#39;rgb(255, 136, 126)&#39;,</span></span>
<span class="line"><span>  &#39;rgb(107, 225, 141)&#39;,</span></span>
<span class="line"><span>  &#39;rgb(151, 171, 255)&#39;,</span></span>
<span class="line"><span>  &#39;rgb(129, 220, 242)&#39;,</span></span>
<span class="line"><span>  &#39;rgb(255, 163, 125)&#39;,</span></span>
<span class="line"><span>  &#39;rgb(152, 132, 234)&#39;</span></span>
<span class="line"><span>]</span></span></code></pre></div><p>配置请参考<a href="./../api/constructor/constructor-options.html#_12-rainbowlines插件">实例化选项</a>。</p><h2 id="注册" tabindex="-1">注册 <a class="header-anchor" href="#注册" aria-label="Permalink to &quot;注册&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MindMap </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;simple-mind-map&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> RainbowLines </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;simple-mind-map/src/plugins/RainbowLines.js&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MindMap.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">usePlugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(RainbowLines)</span></span></code></pre></div><p>注册完且实例化<code>MindMap</code>后可通过<code>mindMap.rainbowLines</code>获取到该实例。</p><h2 id="方法" tabindex="-1">方法 <a class="header-anchor" href="#方法" aria-label="Permalink to &quot;方法&quot;">​</a></h2><h3 id="updaterainlinesconfig-config" tabindex="-1">updateRainLinesConfig(config = {}) <a class="header-anchor" href="#updaterainlinesconfig-config" aria-label="Permalink to &quot;updateRainLinesConfig(config = {})&quot;">​</a></h3><p>如果你在通过实例化选项<code>rainbowLinesConfig</code>设置了彩虹线条后想修改，那么可以使用该方法，参数<code>config</code>同<code>rainbowLinesConfig</code>。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    open</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 是否开启彩虹线条</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    colorsList</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: []</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 自定义彩虹线条的颜色列表，如果不设置，会使用默认颜色列表</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="getcolorslist" tabindex="-1">getColorsList() <a class="header-anchor" href="#getcolorslist" aria-label="Permalink to &quot;getColorsList()&quot;">​</a></h3><p>获取当前使用的彩虹线条颜色列表。</p><h3 id="getnodecolor-node" tabindex="-1">getNodeColor(node) <a class="header-anchor" href="#getnodecolor-node" aria-label="Permalink to &quot;getNodeColor(node)&quot;">​</a></h3><p>获取指定的节点实例对应的彩虹线条颜色。</p><h3 id="getsecondlayerancestor-node" tabindex="-1">getSecondLayerAncestor(node) <a class="header-anchor" href="#getsecondlayerancestor-node" aria-label="Permalink to &quot;getSecondLayerAncestor(node)&quot;">​</a></h3><p>获取一个节点实例的第二层级的祖先节点实例。</p>`,20),p=[t];function o(l,r,h,d,c,k){return a(),i("div",{"data-pagefind-body":!0},p)}const u=s(e,[["render",o]]);export{b as __pageData,u as default};
