import{_ as s,c as i,o as a,a4 as n}from"./chunks/framework.B358x4hV.js";const o=JSON.parse('{"title":"设置节点样式的更多方式","description":"","frontmatter":{},"headers":[],"relativePath":"course/course31.md","filePath":"course/course31.md"}'),p={name:"course/course31.md"},l=n(`<h1 id="设置节点样式的更多方式" tabindex="-1">设置节点样式的更多方式 <a class="header-anchor" href="#设置节点样式的更多方式" aria-label="Permalink to &quot;设置节点样式的更多方式&quot;">​</a></h1><p>首先最基本的节点样式来自应用的主题，也就是通过实例化选项<code>theme</code>指定的主题，如果想覆盖主题的一部分配置可以通过实例化选项<code>themeConfig</code>：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MindMap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    theme: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;classic4&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    themeConfig: {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // 覆盖主题的二级节点的填充样式</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        second: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            fillColor: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;red&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>所有字段可以从默认主题<a href="https://github.com/wanglin2/mind-map/blob/main/simple-mind-map/src/themes/default.js" target="_blank" rel="noreferrer">default.js</a>文件里查看。</p><p>主题将节点按层级分为三种：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 根节点样式</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    root</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 二级节点样式</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    second</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 三级及以下节点样式</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    node</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>所以你想修改哪一级节点的样式需要修改对应的层级对象，支持的字段依旧是从<code>default.js</code>文件里查看，如你所见，它们支持的字段是一样的。</p><p>显然这个文件里没有的字段你设置当然是没用的。</p><p>因为主题只支持这三种层级，所以比如你只想给第五层级设置样式，那么抱歉是无法实现的。</p><p>动态修改节点的样式可以使用节点实例的<code>setStyle</code>或<code>setStyles</code>方法：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">node.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setStyle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;color&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;blue&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>也可以直接使用<code>SET_NODE_STYLE</code>或<code>SET_NODE_STYLES</code>命令：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mindMap.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">execCommand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;SET_NODE_STYLES&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, node, {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    fontSize: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">24</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    shape: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;circle&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>这些方法或命令最终体现在数据里就是给节点数据添加了对应的样式字段，如果使用了富文本，那么<code>text</code>字段中的富文本样式也会修改。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;节点文本&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        fontSize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">24</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        shape</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;circle&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;blue&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>那么聪明的你肯定知道，如果想在渲染时就给节点设置样式，只要给你的数据上加上样式字段再传给思维导图渲染就可以了：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MindMap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    data: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        text: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;节点文本&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        fontSize: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">24</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        shape: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;circle&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        color: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;blue&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    children: []</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>完整示例：</p><iframe style="width:100%;height:455px;border:none;" src="https://wanglin2.github.io/playground/#eNrFVs1uGzcQfhWCRbFyIa/ktU+qHCRxfChQu0WUHooyCFa7I4kpl1zsUpZdQ5eglxQFeump6CHIJbccckkcBMjLJHbyFhkuSWn1kx/kB4EggJz5ZubjkPuRp/RKnodHY6Ad2i2TguealKDH+SUmeZarQpNTUsCgSZQ8UGOpIW2SchQLoSbXYUCmZFCojASYIZhFHHCZHsS5dTFaolnAZobWzSzOGWWSECYFaGJsBrlL5FgIJplMlCw1SUaxHMKhSiHa2lNCFYhobJDdS+TUBFuQRDfaXY6wAJlCAUU4QIMJvXryC08bQbS5FWyYKIMPcXE9fSKgESQmb9AkQV8geURM19aPPr1+ZOt7IBxDsqeyLJbo7e3fuHX407X9W70bv/6430M+Jm3T1iFkoKTu8T+gQ6KdpjVh93OcBwkvEmG6zvTUs59tUqPGttZkmPjNabgCIDokVck4A6nDIeh9AWZ49eQHJOci95BEzCUUwYbjkMY67niOuJnUGBitmYxRw7E2RkbP7529+uvOxZ0zRl0Gixjz1AC2vG068zKajLhIsakG8Ns8qFbhLYWXi794+vfF0wdr6i9wiOr2OY93clnh805OK7ye3J3x2lohtkCuOsTL/kWSa4jeXPQv4z8P8+i9zKNPZ16f1nz1PF/qXGx/1XOx/Z7ubuO5WAMIvG4ENeGoIrX9BZWKoNfLyDqMVUjEVAr5xTbRD53N59UjVCJDUMRlyZMdT7GyoyQN+HChlSWgLKcr3R1wISoJx1QFpLVluMK+HpdcX1dKG+n+WZVccyVxFYGAgTbXRIKyiBJ408GTAmINhzCppB5G8RGvakilrySaH9mGTTe+R2lGee627O2K9ypONOCViOE4I6Sb8iNSrXKXUSe51yBTjFZuB+Dp3DsTZIR0W+itA30mrZToxwbil9ztj7VWklxOBE9+R8jKNYvgF88fnv97tqBNF//9+fr+/6/uPuq2bIYPymgvzrUZI8x4fu/xy2f/LGWcL8aPuq1ar3Bamsu7Qlx2rw1Gw5Z9YrirLYQyC5OyZBR7b14ahIS1tvoDMuGpHuHd025/W+EIyWe7XgBWxD2sHNU5Mf9vltvvU80D436pxFjbQELM2emQtptplc8nq+VHwIcjhO+02/mxr7y+7ne+chYXQ451fdY8TlMu8cOwhhn10J2Gj2eMqfAMV92nTWp7b55z4e1SSXw9VomZc2DvZx8io/g4tMoWtnAYFvhC4RmYbdrsF2pS4pvpNka4D2vNg9HGrm6yiXLcpnT6BixeSXA="></iframe>`,19),e=[l];function h(t,k,E,d,r,c){return a(),i("div",null,e)}const y=s(p,[["render",h]]);export{o as __pageData,y as default};
